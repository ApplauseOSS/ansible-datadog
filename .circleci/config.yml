---
version: 2.1

orbs:
  win: circleci/windows@2.2.0 # The Windows orb give you everything you need to start using the Windows executor.

commands:
  run_win_bash:
    parameters:
      command:
        type: string
        default: ""
    steps:
      - run:
          command: <<parameters.command>>
          shell: bash.exe

# Install the latest version of agent 5 and then try to downgrade to an older version
.install_agent_5: &install_agent_5
  steps:
    - checkout
    # dry run
    - run: ansible-playbook -i ./ci_test/inventory/ci.ini "./ci_test/install_agent_5.yaml" --check
    - run: ansible-playbook -i ./ci_test/inventory/ci.ini "./ci_test/downgrade_to_5_${OS_TYPE}.yaml" --check

    # install latest agent5
    - run: ansible-playbook -i ./ci_test/inventory/ci.ini "./ci_test/install_agent_5.yaml"
    - run: dd-agent info || true
    - run: ps aux | grep -v grep | grep datadog-agent

    # downgrading to 5.23.0
    - run: ansible-playbook -i ./ci_test/inventory/ci.ini "./ci_test/downgrade_to_5_${OS_TYPE}.yaml"
    - run: dd-agent info || true
    - run: ps aux | grep -v grep | grep datadog-agent

# install the latest version of agent5, upgrade to the latest agent6 and downgrade to an old agent5
.install_agent_6: &install_agent_6
  steps:
    - checkout
    # dry run
    - run: ansible-playbook -i ./ci_test/inventory/ci.ini "./ci_test/install_agent_6.yaml" --check
    - run: ansible-playbook -i ./ci_test/inventory/ci.ini "./ci_test/downgrade_to_5_${OS_TYPE}.yaml" --check

    # install latest agent5
    - run: ansible-playbook -i ./ci_test/inventory/ci.ini "./ci_test/install_agent_5.yaml"
    - run: dd-agent info || true
    - run: ps aux | grep -v grep | grep datadog-agent

    # upgrade to the latest agent6
    - run: ansible-playbook -i ./ci_test/inventory/ci.ini "./ci_test/install_agent_6.yaml"
    - run: datadog-agent version

    # downgrading to 5.23.0
    - run: ansible-playbook -i ./ci_test/inventory/ci.ini "./ci_test/downgrade_to_5_${OS_TYPE}.yaml"
    - run: dd-agent info || true
    - run: ps aux | grep -v grep | grep datadog-agent

# install the latest version of agent5, upgrade to the latest agent7 and downgrade to an old agent5
.install_agent_7: &install_agent_7
  steps:
    - checkout
    # dry run
    - run: ansible-playbook -i ./ci_test/inventory/ci.ini "./ci_test/install_agent_7.yaml" --check
    - run: ansible-playbook -i ./ci_test/inventory/ci.ini "./ci_test/downgrade_to_5_${OS_TYPE}.yaml" --check

    # install latest agent5
    - run: ansible-playbook -i ./ci_test/inventory/ci.ini "./ci_test/install_agent_5.yaml"
    - run: dd-agent info || true
    - run: ps aux | grep -v grep | grep datadog-agent

    # upgrade to the latest agent6
    - run: ansible-playbook -i ./ci_test/inventory/ci.ini "./ci_test/install_agent_7.yaml"
    - run: datadog-agent version

    # downgrading to 5.23.0
    - run: ansible-playbook -i ./ci_test/inventory/ci.ini "./ci_test/downgrade_to_5_${OS_TYPE}.yaml"
    - run: dd-agent info || true
    - run: ps aux | grep -v grep | grep datadog-agent

jobs:
  ansible_lint:
    docker:
      - image: datadog/docker-library:ansible_debian_2_4
    steps:
      - checkout
      - run: pip install ansible-lint
      - run: ansible-lint -v $(find . -name *yml) -x ANSIBLE0006,ANSIBLE0010,602,ANSIBLE0017

  # Agent 5

  debian_26_5:
    docker:
      - image: datadog/docker-library:ansible_debian_2_6
    environment:
      - OS_TYPE: "debian"
    <<: *install_agent_5

  centos_26_5:
    docker:
      - image: datadog/docker-library:ansible_centos_2_6
    environment:
      - OS_TYPE: "centos"
    <<: *install_agent_5

  debian_27_5:
    docker:
      - image: datadog/docker-library:ansible_debian_2_7
    environment:
      - OS_TYPE: "debian"
    <<: *install_agent_5

  centos_27_5:
    docker:
      - image: datadog/docker-library:ansible_centos_2_7
    environment:
      - OS_TYPE: "centos"
    <<: *install_agent_5

  debian_28_5:
    docker:
      - image: datadog/docker-library:ansible_debian_2_8
    environment:
      - OS_TYPE: "debian"
    <<: *install_agent_5

  centos_28_5:
    docker:
      - image: datadog/docker-library:ansible_centos_2_8
    environment:
      - OS_TYPE: "centos"
    <<: *install_agent_5

  # Agent 6

  debian_26_6:
    docker:
      - image: datadog/docker-library:ansible_debian_2_6
    environment:
      - OS_TYPE: "debian"
    <<: *install_agent_6

  centos_26_6:
    docker:
      - image: datadog/docker-library:ansible_centos_2_6
    environment:
      - OS_TYPE: "centos"
    <<: *install_agent_6

  debian_27_6:
    docker:
      - image: datadog/docker-library:ansible_debian_2_7
    environment:
      - OS_TYPE: "debian"
    <<: *install_agent_6

  centos_27_6:
    docker:
      - image: datadog/docker-library:ansible_centos_2_7
    environment:
      - OS_TYPE: "centos"
    <<: *install_agent_6

  debian_28_6:
    docker:
      - image: datadog/docker-library:ansible_debian_2_8
    environment:
      - OS_TYPE: "debian"
    <<: *install_agent_6

  centos_28_6:
    docker:
      - image: datadog/docker-library:ansible_centos_2_8
    environment:
      - OS_TYPE: "centos"
    <<: *install_agent_6

  # Agent 7

  debian_26_7:
    docker:
      - image: datadog/docker-library:ansible_debian_2_6
    environment:
      - OS_TYPE: "debian"
    <<: *install_agent_7

  centos_26_7:
    docker:
      - image: datadog/docker-library:ansible_centos_2_6
    environment:
      - OS_TYPE: "centos"
    <<: *install_agent_7

  debian_27_7:
    docker:
      - image: datadog/docker-library:ansible_debian_2_7
    environment:
      - OS_TYPE: "debian"
    <<: *install_agent_7

  centos_27_7:
    docker:
      - image: datadog/docker-library:ansible_centos_2_7
    environment:
      - OS_TYPE: "centos"
    <<: *install_agent_7

  debian_28_7:
    docker:
      - image: datadog/docker-library:ansible_debian_2_8
    environment:
      - OS_TYPE: "debian"
    <<: *install_agent_7

  centos_28_7:
    docker:
      - image: datadog/docker-library:ansible_centos_2_8
    environment:
      - OS_TYPE: "centos"
    <<: *install_agent_7

  windows_28_7:
    executor: win/default
    steps:
      - checkout
      - run: Invoke-WebRequest -Uri https://aka.ms/wsl-ubuntu-1804 -OutFile Ubuntu.appx -UseBasicParsing
      - run: Add-AppxPackage .\Ubuntu.appx
      # - run_win_bash:
      #     command: echo $PATH
      # - run_win_bash:
      #     command: pip install ansible==2.8.*
      # - run_win_bash:
      #     command: git clone https://github.com/ansible/ansible && cd ansible && git checkout v2.8.10
      # - run_win_bash:
      #     command: pip install fnctl
      # - run_win_bash:
      #     command: pip install -e ./ansible/
      # - run_win_bash:
      #     command: cp ./ansible/bin/ansible ./ansible/bin/ansible-playbook
      # - run_win_bash:
      #     command: ansible-playbook -i ./ci_test/inventory/ci.ini "./ci_test/install_agent_7.yaml" --check


workflows:
  version: 2
  test_datadog_role:
    jobs:
      - ansible_lint

      # test debian (apt)
      #   ansible 2.6
      - debian_26_5
      - debian_26_6
      - debian_26_7
      #   ansible 2.7
      - debian_27_5
      - debian_27_6
      - debian_27_7
      #   ansible 2.8
      - debian_28_5
      - debian_28_6
      - debian_28_7

      # test centos (rpm)
      #   ansible 2.6
      - centos_26_5
      - centos_26_6
      - centos_26_7
      #   ansible 2.7
      - centos_27_5
      - centos_27_6
      - centos_27_7
      #   ansible 2.8
      - centos_28_5
      - centos_28_6
      - centos_28_7

      # test windows
      - windows_28_7
